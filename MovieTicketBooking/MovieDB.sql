CREATE DATABASE MovieDB;

USE MovieDB;

CREATE TABLE Managers (
    ManagerID INT AUTO_INCREMENT PRIMARY KEY,
    ManagerName VARCHAR(255) NOT NULL, 
    PASSWORD VARCHAR(255) NOT NULL, 
    Email VARCHAR(255) NOT NULL, 
    PhoneNumber VARCHAR(20), 
    UNIQUE (Email)
);
SELECT * FROM managers


CREATE TABLE Theaters (
    TheaterID INT AUTO_INCREMENT PRIMARY KEY,
    TheaterName VARCHAR(255) NOT NULL,
    Location VARCHAR(255) NOT NULL,
    totalScreens INT NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE Theaters ADD manager_email VARCHAR(100) NOT NULL;
ALTER TABLE Theaters ADD shows VARCHAR(100) NOT NULL;


CREATE TABLE Movies (
    MovieID INT AUTO_INCREMENT PRIMARY KEY,
    MovieTitle VARCHAR(255) NOT NULL,
    Genre VARCHAR(100),
    Duration INT NOT NULL,           
    ImageSrc VARCHAR(255) NOT NULL,
    LANGUAGE VARCHAR(100),
    Director VARCHAR(250),
    Description TEXT,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE Movies ADD manager_email VARCHAR(100) NOT NULL;
ALTER TABLE Movies ADD TheaterName VARCHAR(100) NOT NULL ;
ALTER TABLE movies ADD location VARCHAR(100) NOT NULL;

CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    Username VARCHAR(255) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL,
    PasswordHash VARCHAR(255) NOT NULL,
    Phone VARCHAR(10) NOT NULL
);

CREATE TABLE Screens (
    ScreenID INT AUTO_INCREMENT PRIMARY KEY,
    TheaterID INT NOT NULL,
    ScreenName VARCHAR(100) NOT NULL,
    SeatCapacity INT NOT NULL,
    FOREIGN KEY (TheaterID) REFERENCES Theaters(TheaterID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Shows (
    ShowID INT AUTO_INCREMENT PRIMARY KEY,
    ScreenID INT NOT NULL,
    MovieID INT NOT NULL,
    TheaterID INT NOT NULL,
    
    ScreenName VARCHAR(100),
    ShowTime VARCHAR NOT NULL,
    
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    FOREIGN KEY (ScreenID) REFERENCES Screens(ScreenID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (TheaterID) REFERENCES Theaters(TheaterID)ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (MovieID) REFERENCES Movies(MovieID)ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Seats (
    SeatID INT AUTO_INCREMENT PRIMARY KEY,
    ScreenID INT NOT NULL,
    SeatNumber INT NOT NULL,
    SeatType VARCHAR(60) NOT NULL, -- e.g., 'Royal', 'Executive'
    IsAvailable BOOLEAN DEFAULT TRUE,
    Fare DECIMAL(10, 2) NOT NULL, -- Store the fare for the seat
    
    FOREIGN KEY (ScreenID) REFERENCES Screens(ScreenID)
);	

CREATE TABLE Bookings (
    BookingID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    ScreenID INT NOT NULL,
    TheaterID INT NOT NULL,
    MovieID INT NOT NULL,
    ShowID INT NOT NULL,
    ScreenName VARCHAR(100) NOT NULL,
    ShowTime VARCHAR(100) NOT NULL,
    BookedDate VARCHAR(100) NOT NULL,
    SeatNumbers VARCHAR(500), -- Comma-separated seat numbers 
    
    BookingDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ScreenID) REFERENCES Screens(ScreenID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (TheaterID) REFERENCES Theaters(TheaterID)ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (MovieID) REFERENCES Movies(MovieID)ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ShowID) REFERENCES Shows(ShowID)ON DELETE CASCADE ON UPDATE CASCADE
);

